<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.gidal.mapper.UserMapper">

	<insert id="userjoin">
		insert into user(user_email,user_password,user_name,user_gender,user_phoneNum) values (#{user_email},#{user_password},#{user_name},#{user_gender},#{user_phoneNum})
	</insert>

	<select id="login" resultType="org.gidal.user.domain.UserVO">
		select * from user where user_email = #{user_email} and user_password = #{user_password}
	</select>

	<!-- <update id="">
		update user set enterprise_sectors = #{enterprise_sectors}, enterprise_service = #{enterprise_service}, enterprise_mainImg = #{enterprise_mainImg}, enterprise_img1 = #{enterprise_img1},
		enterprise_img2 = #{enterprise_img2}, enterprise_img3 = #{enterprise_img3}, enterprise_img4 = #{enterprise_img4}, enterprise_address = #{enterprise_address}, enterprise_addressDetail = #{enterprise_addressDetail},
		enterprise_operatingTime = #{enterprise_operatingTime}, enterprise_breakTime = #{enterprise_breakTime}, enterprise_closed = #{enterprise_closed} where enterprise_email = #{enterprise_email}
	</update> -->

	<delete id="userDelete">
		DELETE FROM user WHERE user_email=#{user_email} and user_password = #{user_password}; 
	</delete>


	<select id="UserPageReserve" parameterType="org.gidal.user.domain.SessionPageVO" resultType="org.gidal.user.domain.UserPageVO">
		SELECT 
			r1.*, r2.reserveAndWaiting_code, e.enterprise_businessName 
		FROM 
			reserve r1 LEFT JOIN review r2 
		ON 
			r1.reserve_code = SUBSTRING(
				r2.reserveAndWaiting_code, INSTR(r2.reserveAndWaiting_code, '_')+1, 
				CHAR_LENGTH(r2.reserveAndWaiting_code)) 
			AND r2.reserveAndWaiting_code LIKE ('R%') 
		LEFT JOIN enterprise e 
		ON r1.enterprise_code = e.enterprise_code 
		WHERE 
			r1.user_name = (SELECT user_name FROM user WHERE user_email = #{user_email}) 
			AND r1.user_phoneNum = (SELECT user_phoneNum FROM user WHERE user_email = #{user_email}) 
		ORDER BY
			reserve_code DESC
		LIMIT
			#{startRow}, 10;
	</select>

	<select id="UserPageReserveCount" resultType="int">
		<![CDATA[
		SELECT
			count(reserve_code)
		FROM
			reserve

		]]>
	</select>

	<select id="UserPageWaiting" parameterType="org.gidal.user.domain.SessionPageVO" resultType="org.gidal.user.domain.UserPageWaitingVO">
		SELECT 
			w.*, r.reserveAndWaiting_code, e.enterprise_businessName 
		FROM 
			waiting w LEFT JOIN review r 
		ON 
			w.waiting_code = SUBSTRING(
				r.reserveAndWaiting_code, INSTR(r.reserveAndWaiting_code, '_')+1, 
				CHAR_LENGTH(r.reserveAndWaiting_code)) 
			AND r.reserveAndWaiting_code LIKE ('W%') 
		LEFT JOIN enterprise e 
		ON w.enterprise_code = e.enterprise_code 
		WHERE 
			w.user_name = (SELECT user_name FROM user WHERE user_email = #{user_email}) 
			AND w.user_phoneNum = (SELECT user_phoneNum FROM user WHERE user_email = #{user_email}) 
		ORDER BY
			waiting_code DESC
		LIMIT
			#{startRow}, 10;
	</select>

	<select id="emailCheck"
	    parameterType="org.gidal.enterprise.domain.EnterpriseVO" resultType="java.lang.Integer">
	    SELECT IFNULL(COUNT(*),0)
	    FROM user WHERE user_email=#{user_email}

	</select>

	<select id="UserPageWaitingCount" resultType="int">
		<![CDATA[
		SELECT
			count(waiting_code)
		FROM
			waiting

		]]>
	</select>
	
	<update id="userRevise">
		UPDATE 
			user 
		SET 
			user_password=#{user_password} 
		WHERE 
			user_email=#{user_email};
	</update>

	</mapper>


