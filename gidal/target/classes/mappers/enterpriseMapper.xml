<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.gidal.mapper.EnterpriseMapper">

	<insert id="join">
		insert into enterprise (enterprise_code, enterprise_email, enterprise_password, enterprise_name, enterprise_mainImg) values (#{enterprise_code}, #{enterprise_email}, #{enterprise_password},#{enterprise_name},#{enterprise_mainImg})
	</insert>

	<update id="ent_detail_update">
		update enterprise set enterprise_businessName = #{enterprise_businessName}, enterprise_phone = #{enterprise_phone}, enterprise_sectors = #{enterprise_sectors},
		 enterprise_service = #{enterprise_service},
		 enterprise_add1 = #{enterprise_add1}, enterprise_add2 = #{enterprise_add2},
		 enterprise_add3 = #{enterprise_add3}, enterprise_operatingOpenTime = #{enterprise_operatingOpenTime}, enterprise_operatingCloseTime = #{enterprise_operatingCloseTime},
		 enterprise_closed = #{enterprise_closed} where enterprise_email = #{enterprise_email}
	</update>

	<select id="boardlist" resultType="org.gidal.enterprise.domain.EnterpriseVO">
		select  e.enterprise_code, e.enterprise_businessName, e.enterprise_sectors, e.enterprise_mainImg, e.enterprise_service, e.enterprise_add2, e.enterprise_closed, e.enterprise_service, truncate(round(sum(r.review_scope)/(select ifnull(count(*),0) from review where enterprise_code = e.enterprise_code) * 2) / 2,1) as review_scope
		from enterprise e left join review r on e.enterprise_code = r.enterprise_code where e.enterprise_businessName IS NOT NULL group by e.enterprise_code order by e.enterprise_code DESC;
	</select>

	<select id="selectTotalRecords" resultType="int">
	        SELECT FOUND_ROWS();
	</select>

	<select id="emailCheck" parameterType="org.gidal.enterprise.domain.EnterpriseVO" resultType="java.lang.Integer">
	  	SELECT IFNULL(COUNT(*),0) FROM enterprise WHERE enterprise_email = #{enterprise_email}
	</select>

	<select id="allInfo_enterprise" resultType="org.gidal.enterprise.domain.EnterpriseVO">
		select *, truncate(round(sum(r.review_scope)/(select ifnull(count(*),0) from review where enterprise_code = e.enterprise_code) * 2) / 2,1) as review_scope
		from enterprise e left join review r on e.enterprise_code = r.enterprise_code where e.enterprise_code = #{enterprise_code}
	</select>

	<update id="enterprise_update">
		update enterprise set enterprise_password = #{enterprise_password}, enterprise_businessName = #{enterprise_businessName}, enterprise_phone = #{enterprise_phone}, enterprise_sectors = #{enterprise_sectors},
		 enterprise_service = #{enterprise_service},
		 enterprise_add1 = #{enterprise_add1}, enterprise_add2 = #{enterprise_add2},
		 enterprise_add3 = #{enterprise_add3}, enterprise_operatingOpenTime = #{enterprise_operatingOpenTime}, enterprise_operatingCloseTime = #{enterprise_operatingCloseTime},
		 enterprise_closed = #{enterprise_closed} where enterprise_email = #{enterprise_email}
	</update>

	<select id="findBusinessName"  resultType = "org.gidal.enterprise.domain.EnterpriseVO">
		select enterprise_businessName from enterprise where enterprise_code = #{enterprise_code}
	</select>

	<select id="findReserveUser" resultType = "org.gidal.reserve.domain.ReserveVO">
		select * from reserve where reserve_code = #{reserve_code}
	</select>

	<select id="findReserveUserEmail" resultType = "org.gidal.user.domain.UserVO">
		select * from user where user_name = #{user_name}
	</select>

	<update id="enterprise_img">
		update enterprise set enterprise_mainImg = #{enterprise_mainImg} where enterprise_email = #{enterprise_email}
	</update>

	<select id="waiting_list" resultType = "org.gidal.waiting.domain.WaitingVO">
		select * from waiting where enterprise_code = #{enterprise_code} and waiting_now between concat(CURDATE(), ' ', '00:00:00') and concat(CURDATE(), ' ', '23:59:59') and waiting_yn = 'N'
	</select>

	<select id="last_waiting_list" resultType = "org.gidal.waiting.domain.WaitingVO">
		select * from waiting where enterprise_code = #{enterprise_code} and waiting_yn = 'Y'
	</select>

	<select id="reserve_listCheck" resultType = "org.gidal.reserve.domain.ReserveVO">
		select * from reserve where enterprise_code = #{enterprise_code} and reserve_comfirmation = 'N'
	</select>

	<select id="reserve_listCheck_cnt" resultType = "java.lang.Integer">
		select ifnull(count(*),0) from reserve where enterprise_code = #{enterprise_code} and reserve_comfirmation = 'N'
	</select>

	<select id="reserve_list" resultType = "org.gidal.reserve.domain.ReserveVO">
		select * from reserve where enterprise_code = #{enterprise_code} and reserve_comfirmation = 'Y' and reserve_yn = 'N'
	</select>

	<select id="last_reserve_list" resultType = "org.gidal.reserve.domain.ReserveVO">
		select * from reserve where enterprise_code = #{enterprise_code} and reserve_comfirmation = 'Y' and reserve_yn = 'Y'
	</select>

	<select id="find_enterprise_code" resultType = "java.lang.Integer">
		select enterprise_code from enterprise where enterprise_email = #{enterprise_email}
	</select>

	<update id= "update_yn">
		update waiting set waiting_yn = 'Y' where waiting_code = #{waiting_code}
	</update>

	<update id= "update_reserve_yn">
		update reserve set reserve_yn = 'Y' where reserve_code = #{reserve_code}
	</update>

	<update id= "update_reserveConfirmation_yn">
		update reserve set reserve_comfirmation = 'Y' where reserve_code = #{reserve_code}
	</update>

	<delete id="enterprise_delete">
		delete from enterprise where enterprise_code = #{enterprise_code} and enterprise_password = #{enterprise_password}
	</delete>

	<delete id="enterprise_review_delete">
		delete from review where enterprise_code = #{enterprise_code}
	</delete>

	<delete id="enterprise_reserve_delete">
		delete from reserve where enterprise_code = #{enterprise_code}
	</delete>

	<delete id="enterprise_waiting_delete">
		delete from waiting where enterprise_code = #{enterprise_code}
	</delete>

	<select id="ent_best" resultType="org.gidal.enterprise.domain.EnterpriseVO">
		select *, truncate(round(sum(r.review_scope)/(select ifnull(count(*),0) from review where enterprise_code = e.enterprise_code) * 2) / 2,1) as aver
		from enterprise e left join review r on e.enterprise_code = r.enterprise_code group by e.enterprise_code order by aver desc limit 6;
	</select>

	<select id="ent_popular" resultType="org.gidal.enterprise.domain.EnterpriseVO">

		select e.enterprise_code, e.enterprise_businessName, e.enterprise_sectors, e.enterprise_mainImg, e.enterprise_service, e.enterprise_add2, e.enterprise_closed, e.enterprise_service,
			truncate(round(sum(r.review_scope)/(select ifnull(count(*),0) from review where enterprise_code = e.enterprise_code) * 2) / 2,1) as review_scope,
			(select ifnull(count(*),0) from reserve where enterprise_code = e.enterprise_code)+(select ifnull(count(*),0) from waiting where enterprise_code = e.enterprise_code) as plus
		from enterprise e left join review r on e.enterprise_code = r.enterprise_code where e.enterprise_businessName IS NOT NULL group by e.enterprise_code order by plus DESC;
	</select>

	<select id="reserve_count" resultType = "java.lang.Integer">
		SELECT
			ifnull(count(*),0)
		FROM
			reserve
		WHERE
			enterprise_code = #{enterprise_code} AND reserve_date LIKE(CONCAT(CURDATE(), '%')) AND reserve_yn = 'N';
	</select>

	<select id="reserve_now_list" resultType = "org.gidal.reserve.domain.ReserveVO">
		SELECT
			*
		FROM
			reserve
		WHERE
			enterprise_code = #{enterprise_code} AND reserve_date LIKE(CONCAT(CURDATE(), '%')) AND reserve_yn = 'N' and reserve_comfirmation = 'Y';
	</select>

	<select id="waiting_count" resultType = "java.lang.Integer">
		SELECT
			ifnull(count(*),0)
		FROM
			waiting
		WHERE
			enterprise_code = #{enterprise_code} AND waiting_now LIKE(CONCAT(CURDATE(), '%')) AND waiting_yn = 'N';
	</select>

	<select id="reserve_comfirmation_yn" resultType = "org.gidal.reserve.domain.ReserveVO">
		select * from reserve where enterprise_code = #{enterprise_code} and reserve_comfirmation_yn = 'N'
	</select>

	<select id="waitingReview" resultType = "org.gidal.enterprise.domain.JoinEntReviewVO">
		select * from review r join waiting w on r.enterprise_code = w.enterprise_code where waiting_code = substr(reserveAndWaiting_code, 3,10) and substr(reserveAndWaiting_code, 1, 1) = 'w' and r.enterprise_code = #{enterprise_code};
	</select>

	<select id="whoIsWaiting">
		select * from waiting where waiting_code = #{waiting_code};
	</select>

	<select id="whoIsReserve">
		select * from reserve where waiting_code = #{waiting_code};
	</select>

	<select id="reserveReview" resultType = "org.gidal.enterprise.domain.JoinEntReviewVO">
		select * from review r join reserve w on r.enterprise_code = w.enterprise_code where reserve_code = substr(reserveAndWaiting_code, 3,10) and substr(reserveAndWaiting_code, 1, 1) = 'r' and r.enterprise_code = #{enterprise_code};
	</select>

	<select id="findReview"  resultType = "org.gidal.enterprise.domain.JoinEntReviewVO">
		select * from review where review_code = #{review_code}
	</select>

	<update id="entReply">
		update review set enterprise_text = #{enterprise_text} where review_code = #{review_code}
	</update>

	<update id="delReply">
		update review set enterprise_text = null where review_code = #{review_code}
	</update>

	<select id="total_reserve_cnt" resultType="Integer">
		select ifnull(count(*),0) from reserve where enterprise_code = #{enterprise_code}
	</select>

	<select id="total_waiting_cnt" resultType="Integer">
		select ifnull(count(*),0) from waiting where enterprise_code = #{enterprise_code}
	</select>

	<select id="total_review_cnt" resultType="Integer">
		select ifnull(count(*),0) from review where enterprise_code = #{enterprise_code}
	</select>

	<select id="list_cnt" resultType="Integer">
		select ifnull(count(*),0) from enterprise where enterprise_businessName is not null
	</select>


</mapper>