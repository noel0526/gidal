<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.gidal.mapper.EnterpriseMapper">

	<insert id="join">
		insert into enterprise values (#{enterprise_code}, #{enterprise_email}, #{enterprise_password},#{enterprise_name},
		#{enterprise_businessName}, #{enterprise_phone}, #{enterprise_sectors},#{enterprise_service},#{enterprise_mainImg},
		#{enterprise_add1},#{enterprise_add2},#{enterprise_add3},#{enterprise_operatingOpenTime},#{enterprise_operatingCloseTime},#{enterprise_closed})
	</insert>

	<select id="boardlist" resultType="org.gidal.enterprise.domain.EnterpriseVO">
		select enterprise_code, enterprise_businessName, enterprise_sectors, enterprise_mainImg, enterprise_service, enterprise_add2, enterprise_closed, enterprise_service
		from enterprise order by enterprise_code DESC

	</select>

	<select id="selectTotalRecords" resultType="int">
	        SELECT FOUND_ROWS();
	</select>


	<select id="emailCheck"
	    parameterType="org.gidal.enterprise.domain.EnterpriseVO" resultType="java.lang.Integer">
	    SELECT IFNULL(COUNT(*),0)
	    FROM enterprise WHERE enterprise_email = #{enterprise_email}
	</select>

	<select id="allInfo_enterprise" resultType="org.gidal.enterprise.domain.EnterpriseVO">
		select * from enterprise where enterprise_code = #{enterprise_code}
	</select>

	<update id="enterprise_update">
		update enterprise set enterprise_password = #{enterprise_password}, enterprise_businessName = #{enterprise_businessName}, enterprise_phone = #{enterprise_phone}, enterprise_sectors = #{enterprise_sectors},
		 enterprise_service = #{enterprise_service},
		 enterprise_add1 = #{enterprise_add1}, enterprise_add2 = #{enterprise_add2},
		 enterprise_add3 = #{enterprise_add3}, enterprise_operatingOpenTime = #{enterprise_operatingOpenTime}, enterprise_operatingCloseTime = #{enterprise_operatingCloseTime},
		 enterprise_closed = #{enterprise_closed} where enterprise_email = #{enterprise_email}
	</update>


	<update id="enterprise_img">
		update enterprise set enterprise_mainImg = #{enterprise_mainImg} where enterprise_email = #{enterprise_email}
	</update>



	<select id="waiting_list" resultType = "org.gidal.waiting.domain.WaitingVO">
		select * from waiting where enterprise_code = #{enterprise_code} and waiting_now between concat(CURDATE(), ' ', '00:00:00') and concat(CURDATE(), ' ', '23:59:59')
	</select>

	<select id="reserve_list" resultType = "org.gidal.reserve.domain.ReserveVO">
		select * from reserve where enterprise_code = #{enterprise_code}
	</select>

	<select id="find_enterprise_code" resultType = "java.lang.Integer">
		select enterprise_code from enterprise where enterprise_email = #{enterprise_email}
	</select>

	<update id= "update_yn">
		update waiting set waiting_yn = 'y' where waiting_code = #{waiting_code}
	</update>

	<delete id="enterprise_delete">
		delete from enterprise where enterprise_code = #{enterprise_code} and enterprise_password = #{enterprise_password}
	</delete>

	<select id="ent_best" resultType="org.gidal.enterprise.domain.EnterpriseVO">
		select *, sum(r.review_scope) as sum from enterprise e left join review r on e.enterprise_code = r.enterprise_code group by e.enterprise_code order by sum desc limit 3;


	</select>




</mapper>